2008-12-08  Ulrich Drepper  <drepper@redhat.com>

	* inet/Makefile (tests): Add tst-getni2.
	* inet/tst-getni2.c: New file.

	[BZ #7080]
	* inet/getnameinfo.c (getnameinfo): Check for output buffers being
	NULL when NI_NAMEREQD is set.
	Patch mostly by Yang Hongyang <yanghy@cn.fujitsu.com>.
	* inet/Makefile (tests): Add tst-getni1.
	* inet/tst-getni1.c: New file.

--- libc/inet/Makefile	7 Dec 2007 16:33:46 -0000	1.63
+++ libc/inet/Makefile	9 Dec 2008 22:47:10 -0000	1.65
@@ -52,7 +52,8 @@ routines := htonl htons		\
 aux := check_pf check_native ifreq
 
 tests := htontest test_ifindex tst-ntoa tst-ether_aton tst-network \
-	 tst-gethnm test-ifaddrs bug-if1 test-inet6_opt tst-ether_line
+	 tst-gethnm test-ifaddrs bug-if1 test-inet6_opt tst-ether_line \
+	 tst-getni1 tst-getni2
 
 include ../Rules
 
--- libc/inet/getnameinfo.c	17 Mar 2007 17:08:30 -0000	1.36
+++ libc/inet/getnameinfo.c	9 Dec 2008 10:00:29 -0000	1.37
@@ -178,6 +178,9 @@ getnameinfo (const struct sockaddr *sa, 
   if (sa == NULL || addrlen < sizeof (sa_family_t))
     return EAI_FAMILY;
 
+  if ((flags & NI_NAMEREQD) && host == NULL && serv == NULL)
+    return EAI_NONAME;
+
   switch (sa->sa_family)
     {
     case AF_LOCAL:
--- libc/inet/tst-getni1.c	1 Jan 1970 00:00:00 -0000
+++ libc/inet/tst-getni1.c	9 Dec 2008 09:58:48 -0000	1.1
@@ -0,0 +1,36 @@
+#include <netdb.h>
+#include <stdio.h>
+#include <sys/socket.h>
+
+static int
+do_test (void)
+{
+  int retval = 0;
+
+  struct sockaddr_in s;
+  s.sin_family = AF_INET;
+  s.sin_port = 80;
+  s.sin_addr.s_addr = INADDR_LOOPBACK;
+  int r = getnameinfo((struct sockaddr *) &s, sizeof (s), NULL, 0, NULL, 0,
+		      NI_NUMERICHOST | NI_NUMERICSERV);
+  printf("r = %d\n", r);
+  if (r != 0)
+    {
+      puts ("failed without NI_NAMEREQD");
+      retval = 1;
+    }
+  
+  r = getnameinfo((struct sockaddr *) &s, sizeof (s), NULL, 0, NULL, 0,
+		  NI_NUMERICHOST | NI_NUMERICSERV | NI_NAMEREQD);
+  printf("r = %d\n", r);
+  if (r != EAI_NONAME)
+    {
+      puts ("did not fail with EAI_NONAME with NI_NAMEREQD set");
+      retval = 1;
+    }
+
+  return retval;
+}
+
+#define TEST_FUNCTION do_test ()
+#include "../test-skeleton.c"
--- libc/inet/tst-getni2.c	1 Jan 1970 00:00:00 -0000
+++ libc/inet/tst-getni2.c	9 Dec 2008 22:46:57 -0000	1.1
@@ -0,0 +1,41 @@
+#include <netdb.h>
+#include <stdio.h>
+#include <sys/socket.h>
+
+static int
+do_test (void)
+{
+  int retval = 0;
+
+  struct sockaddr_in6 s;
+  s.sin6_family = AF_INET6;
+  s.sin6_port = htons (80);
+  s.sin6_flowinfo = 0;
+  s.sin6_addr = (struct in6_addr) IN6ADDR_ANY_INIT;
+  s.sin6_scope_id = 0;
+  char buf[1000];
+  buf[0] = '\0';
+  int r = getnameinfo((struct sockaddr *) &s, sizeof (s), buf, sizeof (buf),
+		      NULL, 0, NI_NUMERICSERV);
+  printf("r = %d, buf = \"%s\"\n", r, buf);
+  if (r != 0)
+    {
+      puts ("failed without NI_NAMEREQD");
+      retval = 1;
+    }
+  
+  buf[0] = '\0';
+  r = getnameinfo((struct sockaddr *) &s, sizeof (s), buf, sizeof (buf),
+		  NULL, 0, NI_NUMERICSERV | NI_NAMEREQD);
+  printf("r = %d, buf = \"%s\"\n", r, buf);
+  if (r != EAI_NONAME)
+    {
+      puts ("did not fail with EAI_NONAME with NI_NAMEREQD set");
+      retval = 1;
+    }
+
+  return retval;
+}
+
+#define TEST_FUNCTION do_test ()
+#include "../test-skeleton.c"
